<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>R on Researcher</title>
    <link>/categories/r/</link>
    <description>Recent content in R on Researcher</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>&amp;copy; 2017 Mark Cherrie</copyright>
    <lastBuildDate>Fri, 24 Feb 2017 00:00:00 +0000</lastBuildDate>
    <atom:link href="/categories/r/" rel="self" type="application/rss+xml" />
    
    <item>
      <title>netCDF in R</title>
      <link>/post/netcdf-in-r/</link>
      <pubDate>Fri, 24 Feb 2017 00:00:00 +0000</pubDate>
      
      <guid>/post/netcdf-in-r/</guid>
      <description>&lt;p&gt;NetCDF stands for “Network Common Data Format” which was created by unidata for geoscience data. Here’s a short description on their website (&lt;a href=&#34;https://www.unidata.ucar.edu/netcdf/&#34; class=&#34;uri&#34;&gt;https://www.unidata.ucar.edu/netcdf/&lt;/a&gt;):&lt;/p&gt;
&lt;p&gt;“NetCDF is a set of software libraries and self-describing, machine-independent data formats that support the creation, access, and sharing of array-orientated scientific data.”&lt;/p&gt;
&lt;p&gt;NetCDF files are containers for dimensions, variables and global atttributes. I’ve recently had to process air pollution data stored in this format (.nc/.NC). It’s used for a lot of climate data from x, y and z, so it’s worth learning how to use it if you might use this data in the future. Let’s pick apart the definition a bit further.&lt;/p&gt;
&lt;p&gt;Self-describing This is one of the main advantages of the format, whereby all the information required to use it correctly is supplied within the data file. So it doesn’t matter if you are using Python, Perl or R, you will be able to read it in and plot it.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
